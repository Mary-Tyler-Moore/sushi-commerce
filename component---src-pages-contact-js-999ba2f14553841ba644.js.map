{"version":3,"sources":["webpack:///component---src-pages-contact-js-999ba2f14553841ba644.js","webpack:///./src/components/contact-form.js","webpack:///./src/pages/contact.js"],"names":["webpackJsonp","259","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","encode","validateEmail","undefined","_react","_react2","_gatsbyLink","email","emailValidator","test","InputField","_ref","isInvalid","onChange","onBlur","inputStyles","createElement","id","name","type","required","className","EmailInput","_React$Component","_temp","_this","_ret","this","_len","arguments","length","args","Array","_key","apply","concat","state","_handleChange","event","currentTarget","props","setState","_handleBlur","render","htmlFor","React","Component","MessageInput","_React$Component2","_temp2","_this2","_ret2","_len2","_key2","data","keys","map","key","encodeURIComponent","join","SubmitButton","ContactForm","_React$Component3","_temp3","_this3","_ret3","_len3","_key3","message","_handleInputFieldChange","_handleTextAreaChange","_handleSubmit","e","_this3$state","preventDefault","fetch","method","headers","Content-Type","body","form-name","then","navigateTo","catch","error","alert","_state","action","data-netlify","data-netlify-honeypot","onSubmit","hidden","263","_utils","_utils2","_contactForm","_contactForm2","Contact","outerSectionStyles","display","flexDirection","alignItems","justifyContent","minHeight","innerSectionStylesInline","maxWidth","innerSectionStyles","column","textStyles","raw","textSize","style"],"mappings":"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","file":"component---src-pages-contact-js-999ba2f14553841ba644.js","sourcesContent":["webpackJsonp([70144966829960],{\n\n/***/ 259:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\texports.encode = exports.validateEmail = undefined;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(14);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar validateEmail = exports.validateEmail = function validateEmail(email) {\n\t  // regular expression that returns true if the input has the correct format for\n\t  // emails, i.e. test@test.com\n\t  var emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\t\n\t  return emailValidator.test(email);\n\t};\n\t\n\tvar InputField = function InputField(_ref) {\n\t  var isInvalid = _ref.isInvalid,\n\t      onChange = _ref.onChange,\n\t      onBlur = _ref.onBlur,\n\t      value = _ref.value;\n\t\n\t  var inputStyles = isInvalid ? 'input is-danger' : 'input';\n\t\n\t  return _react2.default.createElement('input', {\n\t    id: 'email',\n\t    name: 'email',\n\t    type: 'email',\n\t    onChange: onChange,\n\t    required: true,\n\t    onBlur: onBlur,\n\t    className: inputStyles,\n\t    value: value\n\t  });\n\t};\n\t\n\tvar EmailInput = function (_React$Component) {\n\t  _inherits(EmailInput, _React$Component);\n\t\n\t  function EmailInput() {\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, EmailInput);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.state = {\n\t      isInvalid: false\n\t    }, _this._handleChange = function (event) {\n\t      var value = event.currentTarget.value;\n\t      var onChange = _this.props.onChange;\n\t      var isInvalid = _this.state.isInvalid;\n\t\n\t\n\t      onChange(value);\n\t\n\t      if (isInvalid) {\n\t        if (validateEmail(value)) {\n\t          _this.setState({ isInvalid: false });\n\t        }\n\t      }\n\t    }, _this._handleBlur = function (event) {\n\t      var value = event.currentTarget.value;\n\t\n\t\n\t      if (!validateEmail(value)) {\n\t        _this.setState({ isInvalid: true });\n\t      }\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  EmailInput.prototype.render = function render() {\n\t    var isInvalid = this.state.isInvalid;\n\t    var value = this.props.value;\n\t\n\t\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: 'input-field field' },\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'email', className: 'label' },\n\t        'Email'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'control' },\n\t        _react2.default.createElement(InputField, {\n\t          onChange: this._handleChange,\n\t          onBlur: this._handleBlur,\n\t          isInvalid: isInvalid,\n\t          value: value\n\t        })\n\t      )\n\t    );\n\t  };\n\t\n\t  return EmailInput;\n\t}(_react2.default.Component);\n\t\n\tvar MessageInput = function (_React$Component2) {\n\t  _inherits(MessageInput, _React$Component2);\n\t\n\t  function MessageInput() {\n\t    var _temp2, _this2, _ret2;\n\t\n\t    _classCallCheck(this, MessageInput);\n\t\n\t    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t      args[_key2] = arguments[_key2];\n\t    }\n\t\n\t    return _ret2 = (_temp2 = (_this2 = _possibleConstructorReturn(this, _React$Component2.call.apply(_React$Component2, [this].concat(args))), _this2), _this2._handleChange = function (event) {\n\t      return _this2.props.onChange(event.currentTarget.value);\n\t    }, _temp2), _possibleConstructorReturn(_this2, _ret2);\n\t  }\n\t\n\t  MessageInput.prototype.render = function render() {\n\t    var value = this.props.value;\n\t\n\t    return _react2.default.createElement(\n\t      'div',\n\t      { className: 'input-field field' },\n\t      _react2.default.createElement(\n\t        'label',\n\t        { htmlFor: 'message', className: 'label' },\n\t        'Message'\n\t      ),\n\t      _react2.default.createElement(\n\t        'div',\n\t        { className: 'control' },\n\t        _react2.default.createElement('textarea', {\n\t          id: 'message',\n\t          name: 'message',\n\t          onChange: this._handleChange,\n\t          required: true,\n\t          className: 'textarea',\n\t          value: value\n\t        })\n\t      )\n\t    );\n\t  };\n\t\n\t  return MessageInput;\n\t}(_react2.default.Component);\n\t\n\tvar encode = exports.encode = function encode(data) {\n\t  return Object.keys(data).map(function (key) {\n\t    return encodeURIComponent(key) + '=' + encodeURIComponent(data[key]);\n\t  }).join('&');\n\t};\n\t\n\tvar SubmitButton = function SubmitButton() {\n\t  return _react2.default.createElement(\n\t    'button',\n\t    { className: 'button is-primary is-rounded', type: 'submit' },\n\t    'Send message'\n\t  );\n\t};\n\t\n\tvar ContactForm = function (_React$Component3) {\n\t  _inherits(ContactForm, _React$Component3);\n\t\n\t  function ContactForm() {\n\t    var _temp3, _this3, _ret3;\n\t\n\t    _classCallCheck(this, ContactForm);\n\t\n\t    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n\t      args[_key3] = arguments[_key3];\n\t    }\n\t\n\t    return _ret3 = (_temp3 = (_this3 = _possibleConstructorReturn(this, _React$Component3.call.apply(_React$Component3, [this].concat(args))), _this3), _this3.state = {\n\t      email: '',\n\t      message: ''\n\t    }, _this3._handleInputFieldChange = function (value) {\n\t      return _this3.setState({ email: value });\n\t    }, _this3._handleTextAreaChange = function (value) {\n\t      return _this3.setState({ message: value });\n\t    }, _this3._handleSubmit = function (e) {\n\t      var _this3$state = _this3.state,\n\t          email = _this3$state.email,\n\t          message = _this3$state.message;\n\t\n\t      e.preventDefault();\n\t      fetch('/', {\n\t        method: 'POST',\n\t        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n\t        body: encode({\n\t          'form-name': 'contact-form',\n\t          email: email,\n\t          message: message\n\t        })\n\t      }).then(function () {\n\t        return (0, _gatsbyLink.navigateTo)('/contact-form-success/');\n\t      }).catch(function (error) {\n\t        return alert(error);\n\t      });\n\t    }, _temp3), _possibleConstructorReturn(_this3, _ret3);\n\t  }\n\t\n\t  ContactForm.prototype.render = function render() {\n\t    var _state = this.state,\n\t        email = _state.email,\n\t        message = _state.message;\n\t\n\t    return _react2.default.createElement(\n\t      'form',\n\t      {\n\t        className: 'form',\n\t        name: 'contact-form',\n\t        method: 'post',\n\t        action: '/contact-form-success',\n\t        'data-netlify': 'true',\n\t        'data-netlify-honeypot': 'bot-field',\n\t        onSubmit: this._handleSubmit\n\t      },\n\t      _react2.default.createElement('input', { type: 'hidden', name: 'contact-form', value: 'contact-form' }),\n\t      _react2.default.createElement(\n\t        'p',\n\t        { hidden: true },\n\t        _react2.default.createElement('input', { name: 'bot-field', onChange: this._handleInputFieldChange })\n\t      ),\n\t      _react2.default.createElement(EmailInput, { onChange: this._handleInputFieldChange, value: email }),\n\t      _react2.default.createElement(MessageInput, { onChange: this._handleTextAreaChange, value: message }),\n\t      _react2.default.createElement(SubmitButton, null)\n\t    );\n\t  };\n\t\n\t  return ContactForm;\n\t}(_react2.default.Component);\n\t\n\t/* type ContactFormProps = {\n\t  email: string,\n\t  message: string,\n\t};\n\t\n\texport default class ContactForm extends React.Component<{}, ContactFormProps> {\n\t  state = {\n\t    email: '',\n\t    message: '',\n\t  };\n\t\n\t  _handleChange = (e: SyntheticEvent<HTMLInputElement>) => {\n\t    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n\t  };\n\t\n\t  _handleSubmit = (e: SyntheticEvent<HTMLButtonElement>) => {\n\t    let { email, message } = this.state;\n\t    e.preventDefault();\n\t    fetch('/', {\n\t      method: 'POST',\n\t      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n\t      body: encode({\n\t        'form-name': 'contact-form',\n\t        email,\n\t        message,\n\t      }),\n\t    })\n\t      .then(() => navigateTo('/contact-form-success/'))\n\t      .catch(error => alert(error));\n\t  };\n\t\n\t  render() {\n\t    return (\n\t      <div>\n\t        <h1>Contact</h1>\n\t        <form\n\t          name=\"contact-form\"\n\t          method=\"post\"\n\t          action=\"/contact-form-success/\"\n\t          data-netlify=\"true\"\n\t          data-netlify-honeypot=\"bot-field\"\n\t          onSubmit={this.handleSubmit}\n\t        >\n\t          <input type=\"hidden\" name=\"contact-form\" value=\"contact-form\" />\n\t          <p hidden>\n\t            <label>\n\t              Don’t fill this out:{' '}\n\t              <input name=\"bot-field\" onChange={this._handleChange} />\n\t            </label>\n\t          </p>\n\t          <p>\n\t            <label>\n\t              Email:<br />\n\t              <input type=\"email\" name=\"email\" onChange={this._handleChange} />\n\t            </label>\n\t          </p>\n\t          <p>\n\t            <label>\n\t              Message:<br />\n\t              <textarea name=\"message\" onChange={this._handleChange} />\n\t            </label>\n\t          </p>\n\t          <p>\n\t            <button type=\"submit\">Send</button>\n\t          </p>\n\t        </form>\n\t      </div>\n\t    );\n\t  }\n\t}\n\t*/\n\t\n\t\n\texports.default = ContactForm;\n\n/***/ }),\n\n/***/ 263:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _utils = __webpack_require__(2);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _titles = __webpack_require__(31);\n\t\n\tvar _contactForm = __webpack_require__(259);\n\t\n\tvar _contactForm2 = _interopRequireDefault(_contactForm);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Contact = function Contact() {\n\t  var outerSectionStyles = {\n\t    display: 'flex',\n\t    flexDirection: 'column',\n\t    alignItems: 'center',\n\t    justifyContent: 'center',\n\t    minHeight: '70vh'\n\t  };\n\t\n\t  var innerSectionStylesInline = {\n\t    maxWidth: '500px'\n\t  };\n\t\n\t  var innerSectionStyles = (0, _utils2.default)({\n\t    column: ['4-desktop', '6-tablet', '11-mobile']\n\t  });\n\t\n\t  var textStyles = (0, _utils2.default)({ raw: 'title', textSize: '2' });\n\t\n\t  return _react2.default.createElement(\n\t    'div',\n\t    { style: outerSectionStyles },\n\t    _react2.default.createElement(\n\t      'h1',\n\t      { className: textStyles },\n\t      'Contact us'\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      { style: innerSectionStylesInline, className: innerSectionStyles },\n\t      _react2.default.createElement(_contactForm2.default, null)\n\t    )\n\t  );\n\t};\n\t\n\texports.default = Contact;\n\tmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-contact-js-999ba2f14553841ba644.js","// @flow\nimport React from 'react';\nimport { navigateTo } from 'gatsby-link';\n\nexport let validateEmail = (email: string) => {\n  // regular expression that returns true if the input has the correct format for\n  // emails, i.e. test@test.com\n  let emailValidator = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return emailValidator.test(email);\n};\n\nlet InputField = ({ isInvalid, onChange, onBlur, value }) => {\n  let inputStyles = isInvalid ? 'input is-danger' : 'input';\n\n  return (\n    <input\n      id=\"email\"\n      name=\"email\"\n      type=\"email\"\n      onChange={onChange}\n      required\n      onBlur={onBlur}\n      className={inputStyles}\n      value={value}\n    />\n  );\n};\n\ntype EmailProps = {\n  value: string,\n  onChange: (string) => void,\n};\n\ntype EmailState = {\n  isInvalid: boolean,\n};\n\nclass EmailInput extends React.Component<EmailProps, EmailState> {\n  state = {\n    isInvalid: false,\n  };\n\n  _handleChange = (event) => {\n    let { value } = event.currentTarget;\n    let { onChange } = this.props;\n    let { isInvalid } = this.state;\n\n    onChange(value);\n\n    if (isInvalid) {\n      if (validateEmail(value)) {\n        this.setState({ isInvalid: false });\n      }\n    }\n  };\n\n  _handleBlur = (event) => {\n    let { value } = event.currentTarget;\n\n    if (!validateEmail(value)) {\n      this.setState({ isInvalid: true });\n    }\n  };\n\n  render() {\n    let { isInvalid } = this.state;\n    let { value } = this.props;\n\n    return (\n      <div className=\"input-field field\">\n        <label htmlFor=\"email\" className=\"label\">\n          Email\n        </label>\n        <div className=\"control\">\n          <InputField\n            onChange={this._handleChange}\n            onBlur={this._handleBlur}\n            isInvalid={isInvalid}\n            value={value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\ntype MessageProps = {\n  onChange: (string) => void,\n  value: string,\n};\n\nclass MessageInput extends React.Component<MessageProps> {\n  _handleChange = (event) => this.props.onChange(event.currentTarget.value);\n\n  render() {\n    let { value } = this.props;\n    return (\n      <div className=\"input-field field\">\n        <label htmlFor=\"message\" className=\"label\">\n          Message\n        </label>\n        <div className=\"control\">\n          <textarea\n            id=\"message\"\n            name=\"message\"\n            onChange={this._handleChange}\n            required\n            className=\"textarea\"\n            value={value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\ntype EncodeData = {\n  'form-name': string,\n  email: string,\n  message: string,\n};\n\nexport let encode = (data: EncodeData) => {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&');\n};\n\nlet SubmitButton = () => (\n  <button className=\"button is-primary is-rounded\" type=\"submit\">\n    Send message\n  </button>\n);\n\ntype ContactState = {\n  email: string,\n  message: string,\n};\n\nexport default class ContactForm extends React.Component<{}, ContactState> {\n  state = {\n    email: '',\n    message: '',\n  };\n\n  _handleInputFieldChange = (value: string) => this.setState({ email: value });\n\n  _handleTextAreaChange = (value: string) => this.setState({ message: value });\n\n  _handleSubmit = (e: SyntheticEvent<HTMLButtonElement>) => {\n    let { email, message } = this.state;\n    e.preventDefault();\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': 'contact-form',\n        email,\n        message,\n      }),\n    })\n      .then(() => navigateTo('/contact-form-success/'))\n      .catch((error) => alert(error));\n  };\n\n  render() {\n    let { email, message } = this.state;\n    return (\n      <form\n        className=\"form\"\n        name=\"contact-form\"\n        method=\"post\"\n        action=\"/contact-form-success\"\n        data-netlify=\"true\"\n        data-netlify-honeypot=\"bot-field\"\n        onSubmit={this._handleSubmit}\n      >\n        <input type=\"hidden\" name=\"contact-form\" value=\"contact-form\" />\n        <p hidden>\n          <input name=\"bot-field\" onChange={this._handleInputFieldChange} />\n        </p>\n        <EmailInput onChange={this._handleInputFieldChange} value={email} />\n        <MessageInput onChange={this._handleTextAreaChange} value={message} />\n        <SubmitButton />\n      </form>\n    );\n  }\n}\n\n/* type ContactFormProps = {\n  email: string,\n  message: string,\n};\n\nexport default class ContactForm extends React.Component<{}, ContactFormProps> {\n  state = {\n    email: '',\n    message: '',\n  };\n\n  _handleChange = (e: SyntheticEvent<HTMLInputElement>) => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n\n  _handleSubmit = (e: SyntheticEvent<HTMLButtonElement>) => {\n    let { email, message } = this.state;\n    e.preventDefault();\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': 'contact-form',\n        email,\n        message,\n      }),\n    })\n      .then(() => navigateTo('/contact-form-success/'))\n      .catch(error => alert(error));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Contact</h1>\n        <form\n          name=\"contact-form\"\n          method=\"post\"\n          action=\"/contact-form-success/\"\n          data-netlify=\"true\"\n          data-netlify-honeypot=\"bot-field\"\n          onSubmit={this.handleSubmit}\n        >\n          <input type=\"hidden\" name=\"contact-form\" value=\"contact-form\" />\n          <p hidden>\n            <label>\n              Don’t fill this out:{' '}\n              <input name=\"bot-field\" onChange={this._handleChange} />\n            </label>\n          </p>\n          <p>\n            <label>\n              Email:<br />\n              <input type=\"email\" name=\"email\" onChange={this._handleChange} />\n            </label>\n          </p>\n          <p>\n            <label>\n              Message:<br />\n              <textarea name=\"message\" onChange={this._handleChange} />\n            </label>\n          </p>\n          <p>\n            <button type=\"submit\">Send</button>\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\n*/\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/contact-form.js","// @flow\nimport React from 'react';\nimport bulmaClassnames from '../utils';\nimport { PageTitle } from '../components/titles';\nimport ContactForm from '../components/contact-form';\n\nlet Contact = () => {\n  let outerSectionStyles = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '70vh',\n  };\n\n  let innerSectionStylesInline = {\n    maxWidth: '500px',\n  };\n\n  let innerSectionStyles = bulmaClassnames({\n    column: ['4-desktop', '6-tablet', '11-mobile'],\n  });\n\n  let textStyles = bulmaClassnames({ raw: 'title', textSize: '2' });\n\n  return (\n    <div style={outerSectionStyles}>\n      <h1 className={textStyles}>Contact us</h1>\n      <div style={innerSectionStylesInline} className={innerSectionStyles}>\n        <ContactForm />\n      </div>\n    </div>\n  );\n};\n\nexport default Contact;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/contact.js"],"sourceRoot":""}